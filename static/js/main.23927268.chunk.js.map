{"version":3,"sources":["Wheel.js","Music.js","Screen.js","Ipod.js","App.js","index.js"],"names":["Wheel","props","className","id","onClick","onHandleRotation","src","alt","onMenuButtonClick","onPlayPauseClick","onCentreButtonClick","Music","state","mounted","self","this","track","audio","play","changePlayState","addEventListener","currentPosition","currentTime","duration","setState","$","width","isCurrentTime","seconds","moment","time","hours","minutes","computeDuration","React","Component","Screen","states","menu","submenu","songs","albums","games","settings","favourite","artist","bands","active","style","backgroundColor","onMusicPlay","Ipod","console","log","favouriteAccessedOnce","handleRotation","wheel","document","getElementById","zt","ZingTouch","Region","angleMoved","angle","bind","e","detail","distanceFromLast","selectAlbums","selectGames","selectSettings","selectArtist","selectBands","selectSongs","selectFavourite","handleCentreButtonClick","stopPropagation","onclick","css","handleMenuButtonClick","handlePlayPauseClick","pause","audioEl","getElementsByClassName","App","ReactDOM","render","StrictMode"],"mappings":"wMAeeA,EAbD,SAACC,GAEX,OACI,sBAAKC,UAAU,eAAeC,GAAG,eAAeC,QAASH,EAAMI,iBAA/D,UACI,qBAAKF,GAAG,WAAWD,UAAU,WAAWI,IAAI,WAAWC,IAAI,WAAWH,QAASH,EAAMO,oBACrF,qBAAKL,GAAG,WAAWD,UAAU,WAAWI,IAAI,mBAAmBC,IAAI,aACnE,qBAAKJ,GAAG,WAAWD,UAAU,WAAWI,IAAI,aAAaC,IAAI,aAC7D,qBAAKJ,GAAG,iBAAiBD,UAAU,iBAAiBI,IAAI,iBAAiBC,IAAI,iBAAiBH,QAASH,EAAMQ,mBAC7G,qBAAKP,UAAU,eAAeC,GAAG,gBAAgBC,QAASH,EAAMS,0B,gCCiE7DC,E,kDAtEX,aAAc,IAAD,8BACT,gBACKC,MAAQ,CACTC,SAAU,GAHL,E,qDAOb,WACI,IAAIC,EAAOC,KACPC,EAAQF,EAAKb,MAAMgB,MACvBD,EAAME,OACNJ,EAAKb,MAAMkB,kBACXH,EAAMI,iBAAiB,cAAa,WAChC,GAAGN,EAAKF,MAAMC,QAAQ,CAClB,IAEMQ,EAFcL,EAAMM,YACJN,EAAMO,SAE5BT,EAAKU,SAAS,CACVP,MAAQD,IAEZS,IAAE,SAASC,MAAsB,IAAhBL,EAAsB,W,6BAMnD,SAAgBL,EAAMW,GAClB,IAAIC,EAEAA,EADDD,EACWX,EAAMM,YAENN,EAAMO,SAEpB,IAAIA,EAAWM,IAAON,SAASK,EAAS,WACpCE,EAAO,GACPC,EAAQR,EAASQ,QAGrB,OAFIA,EAAQ,IAAKD,EAAOC,EAAQ,KAChCD,EAAOA,EAAOP,EAASS,UAAY,IAAMT,EAASK,Y,kCAItD,WACIb,KAAKH,MAAMC,SAAU,I,oBAGzB,WAAS,IACCI,EAASF,KAAKd,MAAdgB,MACN,OACI,sBAAKf,UAAY,0BAAjB,UACI,sBAAKA,UAAY,aAAjB,UACI,qBAAKA,UAAY,eAAeI,IAAI,oFACpC,sBAAKJ,UAAY,cAAjB,UACA,2CACI,2CACA,uDAGR,sBAAKA,UAAY,qBAAjB,UACI,mBAAGA,UAAY,gBAAf,SAA0C,OAAVe,EAAiBF,KAAKkB,gBAAgBhB,GAAM,GAAQ,UACpF,qBAAKf,UAAY,WAAjB,SACI,qBAAKA,UAAY,OAAOC,GAAG,WAE/B,mBAAGD,UAAY,iBAAf,SAA0C,MAATe,EAAgBF,KAAKkB,gBAAgBhB,GAAM,GAAS,oB,GAhErFiB,IAAMC,WC0EXC,EA3EA,SAACnC,GAAW,IAAD,EAC2EA,EAAMoC,OAAhGC,EADe,EACfA,KAAMC,EADS,EACTA,QAASC,EADA,EACAA,MAAOC,EADP,EACOA,OAAQC,EADf,EACeA,MAAOC,EADtB,EACsBA,SAAUC,EADhC,EACgCA,UAAWC,EAD3C,EAC2CA,OAAQC,EADnD,EACmDA,MAAOC,EAD1D,EAC0DA,OAAQ9B,EADlE,EACkEA,MACxF,OACI,qBAAKf,UAAU,SAAf,SACI,sBAAKA,UAAY,mBAAjB,UAEUoC,GAASC,EAKT,KAJF,sBAAKrC,UAAY,WAAW8C,MAAO,CAACC,gBAAiB,SAArD,UACI,sBAAM/C,UAAY,eAAlB,qBACA,qBAAKA,UAAU,UAAUI,IAAI,6DAMjCgC,EACA,sBAAKpC,UAAY,iBAAjB,UACI,sBAAKA,UAAY,WAAjB,UACI,sBAAMA,UAAY,eAAlB,kBACA,qBAAKA,UAAU,UAAUI,IAAI,6DAEjC,qBAAIJ,UAAY,YAAhB,UACI,oBAAgBC,GAAG,QAAQD,UAAasC,EAAQ,cAAe,GAA/D,kBAAQ,SACR,oBAAiBrC,GAAG,SAASD,UAAauC,EAAS,cAAe,GAAlE,mBAAQ,UACR,oBAAgBtC,GAAG,QAAQD,UAAawC,EAAQ,cAAe,GAA/D,kBAAQ,SACR,oBAAmBvC,GAAG,WAAWD,UAAayC,EAAW,cAAe,GAAxE,qBAAQ,kBAGd,MAKAL,GAAQC,EACV,sBAAKrC,UAAY,iBAAjB,UACI,sBAAKA,UAAY,WAAjB,UACI,sBAAMA,UAAY,eAAlB,mBACA,qBAAKA,UAAU,UAAUI,IAAI,6DAEjC,qBAAIJ,UAAY,YAAhB,UACI,oBAAoBC,GAAG,YAAYD,UAAa0C,EAAY,cAAe,GAA3E,sBAAQ,aACR,oBAAiBzC,GAAG,SAASD,UAAa2C,EAAS,cAAe,GAAlE,mBAAQ,UACR,oBAAgB1C,GAAG,QAAQD,UAAa4C,EAAQ,cAAe,GAA/D,kBAAQ,eAGd,KAKU,aAAXC,EAED,sBAAK7C,UAAY,iBAAjB,UACI,uBADJ,UAGI,qBAAKA,UAAY,aAAaI,IAAI,gBAHtC,aAIc,sBAAMJ,UAAU,QAAhB,oBAJd,iBAOE,KAKU,cAAX6C,EACG,cAAC,EAAD,CAAO9B,MAASA,EAAOE,gBAAmBlB,EAAMiD,cAClD,W,iBCsRPC,E,kDAnVX,aAAc,IAAD,8BACT,gBAoGJhC,gBAAkB,SAAClB,GACfmD,QAAQC,IAAI,gBACZ,EAAK7B,SAAS,CACVN,MAAM,EACNoC,uBAAuB,KAzGlB,EA8GbC,eAAiB,SAACtD,GACd,IAAMuD,EAAQC,SAASC,eAAe,gBAChCC,EAAK,IAAIC,IAAUC,OAAOL,GAC5BM,EAAa,EACbC,EAAQ,EAEZJ,EAAGK,KAAKR,EAAO,UAAU,SAACS,GACtBF,EAAQE,EAAEC,OAAOC,iBACjBf,QAAQC,IAAI,WAAaU,EAAQ,MAI9BA,EAAQ,GACPD,IACAV,QAAQC,IAAI,gBAAkBS,EAAa,MACzB,KAAfA,IACCA,EAAa,EAEV,EAAKlD,MAAM0B,OAAS,EAAK1B,MAAM2B,QAC3B,EAAK3B,MAAM4B,MACV,EAAK4B,eAED,EAAKxD,MAAM6B,OACf,EAAK4B,cAED,EAAKzD,MAAM8B,OACf,EAAK4B,iBAIL,EAAK1D,MAAM2B,UAAY,EAAK3B,MAAM0B,OACnC,EAAK1B,MAAMgC,UACV,EAAK2B,eAED,EAAK3D,MAAMiC,QACf,EAAK2B,kBAOjBV,IACAV,QAAQC,IAAI,gBAAkBS,EAAa,MACzB,KAAfA,IACCA,EAAa,EAEV,EAAKlD,MAAM0B,OAAS,EAAK1B,MAAM2B,QAE3B,EAAK3B,MAAM6B,OACV,EAAKgC,cAED,EAAK7D,MAAM8B,MACf,EAAK0B,eAED,EAAKxD,MAAM+B,UACf,EAAK0B,cAIL,EAAKzD,MAAM2B,UAAY,EAAK3B,MAAM0B,OACnC,EAAK1B,MAAMiC,OACV,EAAK6B,kBAED,EAAK9D,MAAMkC,OACf,EAAKyB,sBA/KhB,EAwLbI,wBAA0B,SAAC1E,GACvBmD,QAAQC,IAAI,yBAGZpD,EAAM2E,gBAAgBC,SAJW,MAKiD,EAAKjE,MAAhF0B,EAL0B,EAK1BA,KAAMC,EALoB,EAKpBA,QAASC,EALW,EAKXA,MAAOC,EALI,EAKJA,OAAQC,EALJ,EAKIA,MAAOC,EALX,EAKWA,SAAUC,EALrB,EAKqBA,UAAWC,EALhC,EAKgCA,OAAQC,EALxC,EAKwCA,MAEzE,GAAGR,EACC,GAAGE,EAAM,CAELf,IAAE,qBAAqBqD,IAAI,mBAAoB,mIAC/C,EAAKtD,SAAS,CACVc,MAAOA,EACPC,SAAUA,EACVQ,OAAQ,eAGX,GAAGN,EAAO,CAEXhB,IAAE,qBAAqBqD,IAAI,mBAAoB,mEAC/CrD,IAAE,qBAAqBqD,IAAI,kBAAmB,eAC9C,EAAKtD,SAAS,CACVc,MAAM,EACNC,SAAS,EACTQ,OAAQ,gBAGX,GAAGL,EAAM,CAEVjB,IAAE,qBAAqBqD,IAAI,mBAAoB,mEAC/C,EAAKtD,SAAS,CACVc,MAAM,EACNC,SAAS,EACTQ,OAAQ,eAGRJ,GACJ,EAAKnB,SAAS,CACVc,MAAM,EACNC,SAAS,EACTQ,OAAQ,aAKpB,GAAGR,EACC,GAAGK,EACC,EAAKpB,SAAS,CACVc,MAAM,EACNC,SAAS,EACTQ,OAAQ,mBAGX,GAAGF,EAAO,CAEXpB,IAAE,qBAAqBqD,IAAI,mBAAoB,oFAC/CrD,IAAE,qBAAqBqD,IAAI,sBAAuB,YAClD,EAAKtD,SAAS,CACVc,MAAM,EACNC,SAAS,EACTQ,OAAQ,gBAGX,GAAGD,EAAM,CAEVrB,IAAE,qBAAqBqD,IAAI,mBAAoB,yFAC/C,EAAKtD,SAAS,CACVc,MAAM,EACNC,SAAS,EACTQ,OAAQ,YA7PX,EAmQbgC,sBAAwB,SAAC9E,GACrBmD,QAAQC,IAAI,uBADmB,MAEmD,EAAKzC,MAAhF0B,EAFwB,EAExBA,KAAMC,EAFkB,EAElBA,QAASC,EAFS,EAETA,MAFS,EAEFC,OAFE,EAEMC,MAFN,EAEaC,SAFb,EAEuBC,UAFvB,EAEkCC,OAFlC,EAE0CC,MAIzE,IAAGR,EAIE,GAAGC,IAAYD,EAAK,CACrB,EAAKd,SAAS,CACVc,MAAOA,EACPC,SAAUA,EACVK,WAAW,EACXC,QAAQ,EACRC,OAAO,IAGXrB,IAAE,qBAAqBqD,IAAI,mBAAoB,4JAG9C,IAAIxC,IAASC,EAEd,GAAGC,EAAM,CACL,EAAKhB,SAAS,CACVc,KAAMA,EACNC,SAAUA,EACVQ,OAAQ,UAGZtB,IAAE,qBAAqBqD,IAAI,mBAAoB,uIAE/C,CACA,EAAKtD,SAAS,CACVc,MAAOA,EACPC,QAASA,EACTQ,OAAQ,KAGZtB,IAAE,qBAAqBqD,IAAI,mBAAoB,yJA3S9C,EAiTbE,qBAAuB,SAAC/E,GAAS,MAES,EAAKW,MAApCM,EAFsB,EAEtBA,KAAMoC,EAFgB,EAEhBA,sBACVpC,GAAQoC,GACP,EAAK1C,MAAMK,MAAMgE,QACjB,EAAKzD,SAAS,CACVN,MAAO,KAENoC,IACL,EAAK1C,MAAMK,MAAMC,OACjB,EAAKM,SAAS,CACVN,MAAO,MA1Tf,EAAKN,MAAQ,CACT0B,MAAM,EACNC,SAAS,EACTC,OAAO,EACPC,QAAQ,EACRC,OAAO,EACPC,UAAU,EACVC,WAAW,EACXC,QAAQ,EACRC,OAAO,EACPC,OAAQ,GACR7B,MAAM,EACNoC,uBAAuB,GAdlB,E,qDAmBb,WACI,IAAM4B,EAAUzB,SAAS0B,uBAAuB,iBAAiB,GACjE/B,QAAQC,IAAI6B,GACZnE,KAAKS,SAAS,CACVP,MAAQiE,M,yBAMhB,WACI9B,QAAQC,IAAI,iBAEZtC,KAAKS,SAAS,CACVgB,OAAO,EACPC,QAAQ,EACRC,OAAO,EACPC,UAAU,EACVJ,SAAS,M,4BAIjB,WACIa,QAAQC,IAAI,qBACZtC,KAAKS,SAAS,CACVgB,OAAO,EACPC,QAAQ,EACRC,OAAO,EACPC,UAAU,EACVJ,SAAS,M,yBAIjB,WACIa,QAAQC,IAAI,kBACZtC,KAAKS,SAAS,CACVgB,OAAO,EACPC,QAAQ,EACRC,OAAO,EACPC,UAAU,EACVJ,SAAS,M,0BAGjB,WACIa,QAAQC,IAAI,kBACZtC,KAAKS,SAAS,CACVgB,OAAO,EACPC,QAAQ,EACRC,OAAO,EACPC,UAAU,EACVJ,SAAS,M,6BAIjB,WACIa,QAAQC,IAAI,sBACZtC,KAAKS,SAAS,CACVoB,WAAW,EACXC,QAAQ,EACRC,OAAO,M,yBAIf,WACIM,QAAQC,IAAI,kBACZtC,KAAKS,SAAS,CACVoB,WAAW,EACXC,QAAQ,EACRC,OAAO,M,0BAIf,WACIM,QAAQC,IAAI,mBACZtC,KAAKS,SAAS,CACVoB,WAAW,EACXC,QAAQ,EACRC,OAAO,M,oBAgOf,WACI,OACC,sBAAK5C,UAAU,OAAf,UACG,uBAAOA,UAAU,gBAAjB,SACI,wBAAQI,IAAI,oBAEf,sBAAKJ,UAAU,YAAf,UACG,cAAC,EAAD,CAAQmC,OAAUtB,KAAKH,MAAOsC,YAAenC,KAAKI,kBAClD,cAAC,EAAD,CACAd,iBAAoBU,KAAKwC,eACzB7C,oBAAuBK,KAAK4D,wBAC5BnE,kBAAqBO,KAAKgE,sBAC1BtE,iBAAoBM,KAAKiE,iC,GA7UtB9C,IAAMC,WCuBViD,MARf,WACE,OACE,qBAAKlF,UAAU,MAAf,SACE,cAAC,EAAD,OCnBNmF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9B,SAASC,eAAe,W","file":"static/js/main.23927268.chunk.js","sourcesContent":["import React from 'react';\n\nconst Wheel = (props) => {\n    // display wheel content and take care of various click events\n    return(\n        <div className=\"outer-circle\" id=\"scroll-wheel\" onClick={props.onHandleRotation}>\n            <img id=\"menu-btn\" className=\"menu-btn\" src=\"menu.svg\" alt=\"menu-btn\" onClick={props.onMenuButtonClick} />\n            <img id=\"next-btn\" className=\"next-btn\" src=\"fast_forward.svg\" alt=\"next-btn\"/>\n            <img id=\"prev-btn\" className=\"prev-btn\" src=\"rewind.svg\" alt=\"prev-btn\"/>\n            <img id=\"play-pause-btn\" className=\"play-pause-btn\" src=\"play_pause.svg\" alt=\"play-pause-btn\" onClick={props.onPlayPauseClick}/>\n            <div className=\"inner-circle\" id=\"centre-button\" onClick={props.onCentreButtonClick}></div>\n        </div>\n    );\n}\n\nexport default Wheel;","import React from 'react';\nimport $ from 'jquery';\nimport moment from 'moment';\nclass Music extends React.Component{\n\n    constructor(){\n        super();\n        this.state = {\n            mounted : true\n        }\n    }\n    // once mounted, play the song and change playstate, also update the time for amount of song played\n    componentDidMount(){\n        let self = this;\n        let track = self.props.audio;\n        track.play();\n        self.props.changePlayState();\n        track.addEventListener(\"timeupdate\",function(){\n            if(self.state.mounted){\n                const currentTime = track.currentTime;\n                const totalDuration = track.duration;\n                const currentPosition = currentTime/totalDuration;\n                self.setState({\n                    audio : track\n                })\n                $(\"#fill\").width(currentPosition*100 + \"%\");\n            }\n        })\n        \n    }\n    // return time in a presentable format i.e 00:00\n    computeDuration(track,isCurrentTime){\n        var seconds;\n        if(isCurrentTime){\n            seconds = track.currentTime;\n        }else{\n            seconds = track.duration;\n        }\n        var duration = moment.duration(seconds, \"seconds\");\n        var time = \"\";\n        var hours = duration.hours();\n        if (hours > 0) { time = hours + \":\" ; }\n        time = time + duration.minutes() + \":\" + duration.seconds();\n        return time;\n    }\n    \n    componentWillUnmount(){\n        this.state.mounted = false;\n    }\n\n    render(){\n       const {audio} = this.props;\n        return(\n            <div className = \"playing-track-container\">\n                <div className = \"track-info\">\n                    <img className = \"artist-image\" src=\"https://www.guinnessworldrecords.com/Images/despacito%20header_tcm25-520895.jpg\" />\n                    <div className = \"artist-info\">\n                    <h4>Despacito</h4>\n                        <p>Luis Fonsi</p>\n                        <p>Ft. Daddy Yankee</p>\n                    </div>\n                </div>\n                <div className = \"track-progress-bar\">\n                    <p className = \"current-point\">{audio !== null ? this.computeDuration(audio,true) : '0 / 0'}</p>\n                    <div className = \"seek-bar\">\n                        <div className = \"fill\" id='fill'></div>\n                    </div>\n                    <p className = \"total-duration\">{audio != null ? this.computeDuration(audio,false) : '0 / 0'}</p>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default Music;","import React from 'react';\nimport Music from './Music';\nconst Screen = (props) => {\n    const {menu, submenu, songs, albums, games, settings, favourite, artist, bands, active, audio} = props.states;\n    return(\n        <div className=\"Screen\">\n            <div className = \"screen-container\">\n                {\n                    (!menu && !submenu) ? \n                    <div className = \"titleBar\" style={{backgroundColor: 'white'}}>\n                        <span className = \"menu-heading\">iPod.js</span>\n                        <img className=\"battery\" src=\"https://image.flaticon.com/icons/svg/3103/3103446.svg\"></img>\n                    </div>\n                    : null\n                }\n                {/* menu to be enabled based on conditions */}\n                {\n                    menu ? \n                    <div className = \"menu-container\">\n                        <div className = \"titleBar\">\n                            <span className = \"menu-heading\">Home</span>\n                            <img className=\"battery\" src=\"https://image.flaticon.com/icons/svg/3103/3103446.svg\"></img>\n                        </div>\n                        <ul className = \"menu-list\">\n                            <li key=\"Songs\" id=\"Songs\" className = {songs ? \"active-item\": \"\"}>Songs</li>\n                            <li key=\"Albums\" id=\"Albums\" className = {albums ? \"active-item\": \"\"}>Albums</li>\n                            <li key=\"Games\" id=\"Games\" className = {games ? \"active-item\": \"\"}>Games</li>\n                            <li key=\"Settings\" id=\"Settings\" className = {settings ? \"active-item\": \"\"}>Settings</li>\n                        </ul>\n                    </div>\n                    : null\n                }\n                \n                {/* sub menu to be enabled based on conditions */}\n                {\n                    (!menu && submenu) ? \n                    <div className = \"menu-container\">\n                        <div className = \"titleBar\">\n                            <span className = \"menu-heading\">Songs</span>\n                            <img className=\"battery\" src=\"https://image.flaticon.com/icons/svg/3103/3103446.svg\"></img>\n                        </div>\n                        <ul className = \"menu-list\">\n                            <li key=\"Favourite\" id=\"Favourite\" className = {favourite ? \"active-item\": \"\"}>Favourite</li>\n                            <li key=\"Artist\" id=\"Artist\" className = {artist ? \"active-item\": \"\"}>Artist</li>\n                            <li key=\"Bands\" id=\"Bands\" className = {bands ? \"active-item\": \"\"}>Bands</li>\n                        </ul>\n                    </div>\n                    : null\n                }\n\n                {\n                    // display settings page content\n                    (active === 'settings') ?\n\n                    <div className = \"setting-screen\">\n                        <br />\n                        iPod.js\n                        <img className = \"react-logo\" src=\"logo512.png\" />\n                        Made with <span className=\"heart\">❤</span> by Sourabh\n                    </div>\n\n                    : null\n                }\n\n                {\n                    // show music page and play music\n                    (active === \"favourite\") ?\n                        <Music audio = {audio} changePlayState = {props.onMusicPlay}/>\n                    : null\n                }\n            </div>\n        </div>\n    );\n\n}\n\n\nexport default Screen;","import React from 'react';\nimport Wheel from './Wheel';\nimport Screen from './Screen';\nimport ZingTouch from 'zingtouch';\nimport $ from 'jquery';\n\nclass Ipod extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            menu: true,\n            submenu: false,\n            songs: true,\n            albums: false,\n            games: false,\n            settings: false,\n            favourite: true,\n            artist: false,\n            bands: false,\n            active: '',\n            play: false,\n            favouriteAccessedOnce: false\n        }\n    }\n\n    // get audio element once the component mounts\n    componentDidMount(){\n        const audioEl = document.getElementsByClassName(\"audio-element\")[0];\n        console.log(audioEl);\n        this.setState({\n            audio : audioEl,\n        });\n        // audioEl.play();\n    }\n    \n    // toggle various state variables based on what is selected\n    selectSongs(){\n        console.log(\"Song selected\");\n        // console.log($(\"#Songs\"));\n        this.setState({\n            songs: true,\n            albums: false,\n            games: false,\n            settings: false,\n            submenu: false,\n        });\n    }\n\n    selectSettings(){\n        console.log(\"Settings Selected\");\n        this.setState({\n            songs: false,\n            albums: false,\n            games: false,\n            settings: true,\n            submenu: false,\n        });\n    }\n\n    selectGames(){\n        console.log(\"Games Selected\");\n        this.setState({\n            songs: false,\n            albums: false,\n            games: true,\n            settings: false,\n            submenu: false,\n        });\n    }\n    selectAlbums(){\n        console.log(\"Album Selected\");\n        this.setState({\n            songs: false,\n            albums: true,\n            games: false,\n            settings: false,\n            submenu: false,\n        });\n    }\n\n    selectFavourite(){\n        console.log(\"favourite selected\");\n        this.setState({\n            favourite: true,\n            artist: false,\n            bands: false\n        });\n    }\n\n    selectBands(){\n        console.log(\"Bands Selected\");\n        this.setState({\n            favourite: false,\n            artist: false,\n            bands: true\n        });\n    }\n\n    selectArtist(){\n        console.log(\"Artist Selected\");\n        this.setState({\n            favourite: false,\n            artist: true,\n            bands: false\n        });\n    }\n\n    // change play state to true once we run our song from \"favourite\" page in submenu\n    changePlayState = (props) =>{\n        console.log(\"music played\");\n        this.setState({\n            play: true,\n            favouriteAccessedOnce: true\n        });\n    }\n\n    //wheel rotation control\n    handleRotation = (props) => {\n        const wheel = document.getElementById('scroll-wheel');\n        const zt = new ZingTouch.Region(wheel);\n        let angleMoved = 0;\n        let angle = 0;\n        \n        zt.bind(wheel, 'rotate', (e) => {\n            angle = e.detail.distanceFromLast;\n            console.log(\"angle : \" + angle + \"\\n\");\n            // select different items based on angle moved\n            // handle menu and submenu item selection\n            //if angle moved is positive i.e clockwise rotation\n            if(angle > 0){\n                angleMoved++;\n                console.log(\"angleMoved : \" + angleMoved + \"\\n\");\n                if(angleMoved === 30){\n                    angleMoved = 0;\n                    //menu\n                    if(this.state.menu && !this.state.submenu){\n                        if(this.state.songs){\n                            this.selectAlbums();\n                        }\n                        else if(this.state.albums){\n                            this.selectGames();\n                        }\n                        else if(this.state.games){\n                            this.selectSettings();\n                        }\n                    }\n                    //submenu\n                    else if(this.state.submenu && !this.state.menu){\n                        if(this.state.favourite){\n                            this.selectArtist();\n                        }\n                        else if(this.state.artist){\n                            this.selectBands();\n                        }\n                    }\n                }\n            }\n            //angle moved is negative i.e anticlockwise rotation\n            else{\n                angleMoved++;\n                console.log(\"angleMoved : \" + angleMoved + \"\\n\");\n                if(angleMoved === 30){\n                    angleMoved = 0;\n                    //menu\n                    if(this.state.menu && !this.state.submenu){\n\n                        if(this.state.albums){\n                            this.selectSongs();\n                        }\n                        else if(this.state.games){\n                            this.selectAlbums()\n                        }\n                        else if(this.state.settings){\n                            this.selectGames();\n                        }\n                    }\n                    //submenu\n                    else if(this.state.submenu && !this.state.menu){\n                        if(this.state.artist){\n                            this.selectFavourite();\n                        }\n                        else if(this.state.bands){\n                            this.selectArtist();\n                        }\n                    }\n                }\n            }\n\n        });\n    }\n    // handle Centre button click\n    handleCentreButtonClick = (props) => {\n        console.log(\"Centre Button Clicked\");\n\n        //stop propagation to wheel div\n        props.stopPropagation(onclick);\n        const {menu, submenu, songs, albums, games, settings, favourite, artist, bands} = this.state;\n        // if we are on the main menu\n        if(menu){\n            if(songs){\n                let imageUrl = \"https://c4.wallpaperflare.com/wallpaper/807/970/560/psychedelic-abstract-colorful-wolf-headphones-hd-wallpaper-preview.jpg\";\n                $('.screen-container').css('background-image', 'url(' + imageUrl + ')');\n                this.setState({\n                    menu: !menu,\n                    submenu: !submenu,\n                    active: 'songs'\n                });\n            }\n            else if(albums){\n                let imageUrl = \"https://media.giphy.com/media/ThuxekMi9kcAU4euK3/giphy.gif\";\n                $('.screen-container').css('background-image', 'url(' + imageUrl + ')');\n                $('.screen-container').css('background-size', '264px 185px');\n                this.setState({\n                    menu: false,\n                    submenu: false,\n                    active: 'albums'\n                });\n            }\n            else if(games){\n                let imageUrl = \"https://media.giphy.com/media/S7nF0HAVEBxUu76pxR/giphy.gif\";\n                $('.screen-container').css('background-image', 'url(' + imageUrl + ')');\n                this.setState({\n                    menu: false,\n                    submenu: false,\n                    active: 'games'\n                });\n            }\n            else if(settings){\n                this.setState({\n                    menu: false,\n                    submenu: false,\n                    active: 'settings'\n                });\n            }\n        }\n\n        if(submenu){\n            if(favourite){\n                this.setState({\n                    menu: false,\n                    submenu: false,\n                    active: 'favourite'\n                });\n            }\n            else if(artist){\n                let imageUrl = \"https://static.wikia.nocookie.net/taylor-swift/images/3/3f/The_Weeknd_1.jpg\";\n                $('.screen-container').css('background-image', 'url(' + imageUrl + ')');\n                $('.screen-container').css('background-position', 'relative');\n                this.setState({\n                    menu: false,\n                    submenu: false,\n                    active: 'artist'\n                });\n            }\n            else if(bands){\n                let imageUrl = \"https://flypaper.soundfly.com/wp-content/uploads/2016/10/metal-covers-header.png\";\n                $('.screen-container').css('background-image', 'url(' + imageUrl + ')');\n                this.setState({\n                    menu: false,\n                    submenu: false,\n                    active: 'bands'\n                });\n            }\n        }\n    }\n    // handle Menu button click, takes back to previous screen\n    handleMenuButtonClick = (props) => {\n        console.log(\"Menu Button clicked\");\n        const {menu, submenu, songs, albums, games, settings, favourite, artist, bands} = this.state;\n        // console.log(\"menu : \" + menu + \"\\n\");\n        // console.log(\"submenu : \" + submenu + \"\\n\");\n        // do nothing if we are already on menu\n        if(menu){\n            return;\n        }\n        // if we are on submenu\n        else if(submenu && !menu){\n            this.setState({\n                menu: !menu,\n                submenu: !submenu,\n                favourite: true,\n                artist: false,\n                bands: false\n            });\n            let imageUrl = \"https://c4.wallpaperflare.com/wallpaper/738/62/544/naruto-chidori-naruto-naruto-uzumaki-rasengan-naruto-sasuke-uchiha-hd-wallpaper-preview.jpg\";\n            $('.screen-container').css('background-image', 'url(' + imageUrl + ')');\n        }\n        // if we are neither on menu or submenu\n        else if(!menu && !submenu)\n        {\n            if(songs){\n                this.setState({\n                    menu: menu,\n                    submenu: !submenu,\n                    active: 'songs'\n                });\n                let imageUrl = \"https://c4.wallpaperflare.com/wallpaper/807/970/560/psychedelic-abstract-colorful-wolf-headphones-hd-wallpaper-preview.jpg\";\n                $('.screen-container').css('background-image', 'url(' + imageUrl + ')');\n            }\n            else{\n                this.setState({\n                    menu: !menu,\n                    submenu: submenu,\n                    active: ''\n                });\n                let imageUrl = \"https://c4.wallpaperflare.com/wallpaper/738/62/544/naruto-chidori-naruto-naruto-uzumaki-rasengan-naruto-sasuke-uchiha-hd-wallpaper-preview.jpg\";\n                $('.screen-container').css('background-image', 'url(' + imageUrl + ')');\n            }\n        }\n    }\n\n    // pauses the song if it is playing and plays if it is not playings\n    handlePlayPauseClick = (props) =>{\n        // toggle song play and pause\n        const {play, favouriteAccessedOnce} = this.state;\n        if(play && favouriteAccessedOnce){\n            this.state.audio.pause();\n            this.setState({\n                play : false\n            });\n        }else if(favouriteAccessedOnce){\n            this.state.audio.play();\n            this.setState({\n                play : true\n            });\n        }\n    }\n    render(){\n        return (\n         <div className=\"Ipod\">\n            <audio className=\"audio-element\">\n                <source src=\"Despacito.mp3\"></source>\n            </audio>\n             <div className=\"container\">\n                <Screen states = {this.state} onMusicPlay = {this.changePlayState}/>\n                <Wheel\n                onHandleRotation = {this.handleRotation}\n                onCentreButtonClick = {this.handleCentreButtonClick}\n                onMenuButtonClick = {this.handleMenuButtonClick} \n                onPlayPauseClick = {this.handlePlayPauseClick}/>\n             </div>\n         </div>\n        );\n      }\n}\n\nexport default Ipod;","import Ipod from './Ipod';\n// npx create-react-app my-app\n// A few words about redux\n// Redux is a state management tool for javascript\n// 1. Acts as a single source of truth. A thing called \"store\" stores the state for components.\n// No need of scattering the states throughout components\n// 2. state is read only\n// 3. changes to state are made by pure functions only also called reducers.\n\n\n// When and why should we use redux?\n// When we have deep nested hierarchy of components, the state must be moved to a common parent if it is to be shared among many components\n// We can avoid this cumbersome task using redux. So redux is useful when many components need to share state.\n// Redux state change is predictible. We know when, where, why, who is changing the state.\n// States are easier to maintain.\n// It helps in data persistance.\n// Data flow is only in one direction. See how-redux-works.png\n\n\n// Actions only describe what happened, but don't describe how the application's state changes. \n// Reducer specifies how the application's state changes in response to actions sent to the store.\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Ipod />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}